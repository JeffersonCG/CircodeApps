<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picbImc.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>